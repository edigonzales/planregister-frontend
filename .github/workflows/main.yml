name: CI/CD

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '**.md'

jobs:

  build-jvm:
    env:
      DOCKER_ACCOUNT: sogis
      DOCKER_REPO: planregister-frontend-jvm
      DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}} 
      BUILD_NUMBER: ${{ github.run_number }}
      VERSION_MAJOR: "0"
      VERSION_MINOR: "0"

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build 
        run: |
          ./mvnw clean package -Pproduction
          ls -la target

      # - uses: actions/upload-artifact@v2
      #   if: ${{ failure() }}
      #   with:
      #     name: reports
      #     path: build/reports/tests/

      - name: Set up QEMU for amd64 and arm64
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}
          labels: |
            org.opencontainers.image.title=${{ env.DOCKER_REPO }}
            org.opencontainers.image.version=${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}.${{ env.BUILD_NUMBER }}
            org.opencontainers.image.base.name=docker.io/bellsoft/liberica-openjdk-alpine:17.0.8

      - name: Login to Docker Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
        if: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}

      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      #   if: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}

      - name: Build and push to registries
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          file: Dockerfile.jvm
          labels: ${{ steps.meta.outputs.labels }}
          pull: true
          push: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}
          tags: |
            ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:latest
            ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}.${{ env.BUILD_NUMBER }}
            ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}
            ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION_MAJOR }}
          # tags: |
          #   ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:latest
          #   ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}.${{ env.BUILD_NUMBER }}
          #   ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}
          #   ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION_MAJOR }}
          #   ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:latest
          #   ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}.${{ env.BUILD_NUMBER }}
          #   ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}
          #   ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION_MAJOR }}

  # build-native:
  #   env:
  #     DOCKER_ACCOUNT: sogis
  #     DOCKER_REPO: gretlx-frontend
  #     DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  #     DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}} 
  #     BUILD_NUMBER: ${{ github.run_number }}
  #     VERSION_MAJOR: "0"
  #     VERSION_MINOR: "0"

  #   runs-on: ubuntu-latest

  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: graalvm/setup-graalvm@v1
  #       with:
  #         java-version: '17.0.7'
  #         distribution: 'graalvm'
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         native-image-job-reports: 'true'
  #         cache: 'maven'

  #     - name: Build 
  #       run: |
  #         ./mvnw -Pproduction -Pnative native:compile
  #         ls -la target

  #     # - uses: actions/upload-artifact@v2
  #     #   if: ${{ failure() }}
  #     #   with:
  #     #     name: reports
  #     #     path: build/reports/tests/

  #     - name: Set up QEMU for amd64
  #       uses: docker/setup-qemu-action@v2
  #       with:
  #         platforms: linux/amd64

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v4
  #       with:
  #         images: ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}
  #         labels: |
  #           org.opencontainers.image.title=${{ env.DOCKER_REPO }}
  #           org.opencontainers.image.version=${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}.${{ env.BUILD_NUMBER }}
  #           org.opencontainers.image.base.name=docker.io/bellsoft/alpaquita-linux-base:stream-glibc

  #     - name: Login to Docker Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ env.DOCKER_USERNAME }}
  #         password: ${{ env.DOCKER_PASSWORD }}
  #       if: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}

  #     # - name: Login to GitHub Container Registry
  #     #   uses: docker/login-action@v2
  #     #   with:
  #     #     registry: ghcr.io
  #     #     username: ${{ github.actor }}
  #     #     password: ${{ secrets.GITHUB_TOKEN }}
  #     #   if: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}

  #     - name: Build and push to registries
  #       uses: docker/build-push-action@v2
  #       with:
  #         platforms: linux/amd64
  #         context: .
  #         file: Dockerfile.native
  #         labels: ${{ steps.meta.outputs.labels }}
  #         pull: true
  #         push: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}
  #         tags: |
  #           ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:latest
  #           ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}.${{ env.BUILD_NUMBER }}
  #           ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}
  #           ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION_MAJOR }}
  #         # tags: |
  #         #   ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:latest
  #         #   ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}.${{ env.BUILD_NUMBER }}
  #         #   ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}
  #         #   ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION_MAJOR }}
  #         #   ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:latest
  #         #   ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}.${{ env.BUILD_NUMBER }}
  #         #   ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}
  #         #   ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION_MAJOR }}
